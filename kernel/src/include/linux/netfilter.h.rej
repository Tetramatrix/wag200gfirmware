***************
*** 117,133 ****
  /* This is gross, but inline doesn't cut it for avoiding the function
     call in fast path: gcc doesn't inline (needs value tracking?). --RR */
  #ifdef CONFIG_NETFILTER_DEBUG
- #define NF_HOOK nf_hook_slow
  #else
  #define NF_HOOK(pf, hook, skb, indev, outdev, okfn)			\
  (list_empty(&nf_hooks[(pf)][(hook)])					\
   ? (okfn)(skb)								\
-  : nf_hook_slow((pf), (hook), (skb), (indev), (outdev), (okfn)))
  #endif
  
  int nf_hook_slow(int pf, unsigned int hook, struct sk_buff *skb,
  		 struct net_device *indev, struct net_device *outdev,
- 		 int (*okfn)(struct sk_buff *));
  
  /* Call setsockopt() */
  int nf_setsockopt(struct sock *sk, int pf, int optval, char *opt, 
--- 117,139 ----
  /* This is gross, but inline doesn't cut it for avoiding the function
     call in fast path: gcc doesn't inline (needs value tracking?). --RR */
  #ifdef CONFIG_NETFILTER_DEBUG
+ #define NF_HOOK(pf, hook, skb, indev, outdev, okfn)			\
+ 		nf_hook_slow((pf), (hook), (skb), (indev), (outdev), (okfn), INT_MIN)
+ #define NF_HOOK_THRESH nf_hook_slow
  #else
  #define NF_HOOK(pf, hook, skb, indev, outdev, okfn)			\
  (list_empty(&nf_hooks[(pf)][(hook)])					\
   ? (okfn)(skb)								\
+  : nf_hook_slow((pf), (hook), (skb), (indev), (outdev), (okfn), INT_MIN))
+ #define NF_HOOK_THRESH(pf, hook, skb, indev, outdev, okfn, thresh)	\
+ (list_empty(&nf_hooks[(pf)][(hook)])					\
+  ? (okfn)(skb)								\
+  : nf_hook_slow((pf), (hook), (skb), (indev), (outdev), (okfn), (thresh)))
  #endif
  
  int nf_hook_slow(int pf, unsigned int hook, struct sk_buff *skb,
  		 struct net_device *indev, struct net_device *outdev,
+ 		 int (*okfn)(struct sk_buff *), int thresh);
  
  /* Call setsockopt() */
  int nf_setsockopt(struct sock *sk, int pf, int optval, char *opt, 
